42;
print(42);
print(2 @@ "aaa");
print(if (False){"True";}elif(False){"No entro al primer elif";}elif(False){"Entro al segundo elif";}else{"Entro al else";} @ ". Prueba del if en el interpreter.");

for(let a = 0; a < 3; a := a + 1){
    if(a is number and True){
        print("value:"@@a);
    }
    else{
        print("Este es el else del for");
    }
}

print(
    let a = 3 
        in 
            while(a > 0){  
                a := a - 1; 
                print(a);
                if(a == 0){
                    "Ya termino";
                    }
                });
while(False){
    print("No debe entrar a aqui");
}
print(1.4 + 2);

let m = 7;

function test(x: number){
    x + 7;
}

print(test(7));

type Range(min:number, max:number) {
    self.min = min;
    self.max = max;
    self.current = min - 1;

    next(): bool => (self.current := self.current + 1) < self.max;
    current(): number => self.current;
}

let ran = new Range(5, 9);
print(ran);

function fib(n: number): number => if (n == 0 or n == 1) {1;} else {fib(n - 1) + fib(n - 2);}  
print(fib(0));
print(fib(5));

print(
    {
        if (True) {"Bloque del if";}
    } 
    @@ 
    {
        fib(5);
    });

print(m is Range);
print(ran is Range);

type Person(firstname:string, lastname:string) {
    self.firstname = firstname;
    self.lastname = lastname;

    name(): string => self.firstname @@ self.lastname;
    hash() : number {
        5;
    }
}

type Knight(value:string, value1:string) inherits Person(value , value1) {
    name():string => "Sir" @@ base();
    base():number=>1;
}
